from __future__ import print_function


# --------------- Helpers that build all of the responses ----------------------

def build_speechlet_response(title, output, reprompt_text, should_end_session):
    return {
        'outputSpeech': {
            'type': 'PlainText',
            'text': output
        },
        'card': {
            'type': 'Simple',
            'title': "SessionSpeechlet - " + title,
            'content': "SessionSpeechlet - " + output
        },
        'reprompt': {
            'outputSpeech': {
                'type': 'PlainText',
                'text': reprompt_text
            }
        },
        'shouldEndSession': should_end_session
    }


def build_response(session_attributes, speechlet_response):
    return {
        'version': '1.0',
        'sessionAttributes': session_attributes,
        'response': speechlet_response
    }


# --------------- Functions that control the skill's behavior ------------------

def get_welcome_response():
    
    session_attributes = {}
    card_title = "Welcome"
    speech_output = "Welcome to the Wildlife Guru. " \
                    "Please tell me your choice one product second animal and third ngo names if product then by saying, " \
                    "my option is one"
    reprompt_text = "Please tell me your choice by saying, " \
                    "my option is one."
    
    should_end_session = False
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session))

def handle_session_end_request():
    card_title = "Session Ended"
    speech_output = "Thank you for using Wildlife Guru. " \
                    "Have a nice day! "
    # Setting this to true ends the session and exits the skill.
    should_end_session = True
    return build_response({}, build_speechlet_response(
        card_title, speech_output, None, should_end_session))

def set_option(intent, session):

    card_title = "Menu Option"
    session_attributes = {}
    should_end_session = False

    if 'opt' in intent['slots']:
        user_choice = intent['slots']['opt']['value']
        #session_attributes = create_favorite_color_attributes(favorite_color)
        if user_choice == "1":
            speech_output = "Your choice is product. " \
                            "You can ask me about product by saying, " \
                            "tell me about necklace?"
            reprompt_text = "You can ask me about product by saying, " \
                            "tell me about necklace?"
        elif user_choice == "2":
            speech_output = "I now know your choice is "  \
                            "Animal" \
                            ". You can ask me about animal by saying, " \
                            "tell me about animal name?"
            reprompt_text = "You can ask me about animal by saying, " \
                            "tell me about animal name?"
        elif user_choice == "3":
            speech_output = "I now know your choice is " \
                            "ngo names"  \
                            ". You can ask me about ngos by saying, " \
                            "tell me about ngos name?"
            reprompt_text = "You can ask me about ngos by saying, " \
                            "tell me about ngos name?"
        else:
            speech_output = "I'm not sure what your choice is. "+ \
                            user_choice +" Please try again."
            reprompt_text = "I'm not sure what your choice is. " \
                            "You can tell me your choice by saying, " \
                            "my option is one."
    else:
        speech_output = "I'm not sure what your choice is. " \
                        "Please try again."
        reprompt_text = "I'm not sure what your choice is. " \
                            "You can tell me your choice by saying, " \
                            "my option is one."
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session))

def know_animal(intent, session):
    card_title = "Animal Details"
    session_attributes = {}
    should_end_session = False

    if 'animal' in intent['slots']:
        user_animal = intent['slots']['animal']['value']
        for i in range(len(anim)):
        if a == b[i][0]:
            speech_output=b[i][1]
            reprompt_text=b[i][1]
    else:
        speech_output = "I'm not sure what your animal is. " \
                        "Please try again."
        reprompt_text = "I'm not sure what your animal is. " \
                            "You can tell me your animal by saying, " \
                            "tell me about elephant."
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session)) 

def set_park(intent, session):

    card_title = "Animals"
    session_attributes = {}
    should_end_session = False

    if 'park' in intent['slots']:
        user_choice = intent['slots']['park']['value']
        if user_choice == "1":
            speech_output = "Your choice is product. " \
                            "You can ask me about product by saying, " \
                            "tell me about necklace?"
            reprompt_text = "You can ask me about product by saying, " \
                            "tell me about necklace?"
        elif user_choice == "2":
            speech_output = "I now know your choice is "  \
                            "Animal" \
                            ". You can ask me about animal by saying, " \
                            "tell me about animal name?"
            reprompt_text = "You can ask me about animal by saying, " \
                            "tell me about animal name?"
        elif user_choice == "3":
            speech_output = "I now know your choice is " \
                            "ngo names"  \
                            ". You can ask me about ngos by saying, " \
                            "tell me about ngos name?"
            reprompt_text = "You can ask me about ngos by saying, " \
                            "tell me about ngos name?"
        else:
            speech_output = "I'm not sure what your choice is. "+ \
                            user_choice +" Please try again."
            reprompt_text = "I'm not sure what your choice is. " \
                            "You can tell me your choice by saying, " \
                            "my option is one."
    else:
        speech_output = "I'm not sure what your choice is. " \
                        "Please try again."
        reprompt_text = "I'm not sure what your choice is. " \
                            "You can tell me your choice by saying, " \
                            "my option is one."
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session))


def wild_fact(intent, session):
    import random
    index = random.randint(0,len(wild)-1)
    cardTitle = "Wildlife Facts"
    sessionAttributes = {}
    should_end_session = False
    speechOutput = "One of the interesting fact related to wildlife is " + wild[index] 
    repromptText = "You can know interesting facts about wildlife like by saying Tell me about wildlife"
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session))

def ngo_names(intent, session):
    import random
    index = random.randint(0,len(ngos)-1)
    cardTitle = "NGOS Details"
    sessionAttributes = {}
    should_end_session = False
    speechOutput = "One of the NGO related to wildlife is " + ngos[index] 
    repromptText = "You can know about NGOS related to wildlife like by saying Tell me about wildlife"
    return build_response(session_attributes, build_speechlet_response(
        card_title, speech_output, reprompt_text, should_end_session))


# --------------- Events ------------------

def on_session_started(session_started_request, session):
    """ Called when the session starts """

    print("on_session_started requestId=" + session_started_request['requestId']
          + ", sessionId=" + session['sessionId'])


def on_launch(launch_request, session):
    """ Called when the user launches the skill without specifying what they
    want
    """

    print("on_launch requestId=" + launch_request['requestId'] +
          ", sessionId=" + session['sessionId'])
    # Dispatch to your skill's launch
    return get_welcome_response()


def on_intent(intent_request, session):
    """ Called when the user specifies an intent for this skill """

    print("on_intent requestId=" + intent_request['requestId'] +
          ", sessionId=" + session['sessionId'])

    intent = intent_request['intent']
    intent_name = intent_request['intent']['name']

    # Dispatch to your skill's intent handlers
    if intent_name == "WhatIsOption":
        return set_option(intent, session)
    elif intent_name == "AMAZON.HelpIntent":
        return get_welcome_response()
    elif intent_name== "WildlifeFacts":
        return wild_fact(intent,session)
    elif intent_name == "AMAZON.CancelIntent" or intent_name == "AMAZON.StopIntent":
        return handle_session_end_request()
    else:
        raise ValueError("Invalid intent")


def on_session_ended(session_ended_request, session):
    """ Called when the user ends the session.

    Is not called when the skill returns should_end_session=true
    """
    print("on_session_ended requestId=" + session_ended_request['requestId'] +
          ", sessionId=" + session['sessionId'])
    # add cleanup logic here


# --------------- Main handler ------------------

def lambda_handler(event, context):
    """ Route the incoming request based on type (LaunchRequest, IntentRequest,
    etc.) The JSON body of the request is provided in the event parameter.
    """
    print("event.session.application.applicationId=" +
          event['session']['application']['applicationId'])

    """
    Uncomment this if statement and populate with your skill's application ID to
    prevent someone else from configuring a skill that sends requests to this
    function.
    """
    # if (event['session']['application']['applicationId'] !=
    #         "amzn1.echo-sdk-ams.app.[unique-value-here]"):
    #     raise ValueError("Invalid Application ID")

    if event['session']['new']:
        on_session_started({'requestId': event['request']['requestId']},
                           event['session'])

    if event['request']['type'] == "LaunchRequest":
        return on_launch(event['request'], event['session'])
    elif event['request']['type'] == "IntentRequest":
        return on_intent(event['request'], event['session'])
    elif event['request']['type'] == "SessionEndedRequest":
        return on_session_ended(event['request'], event['session'])
   
################################# WILDLIFE FACTS ################################################        
wild = [
  'Slugs have four noses.',
  'The fingerprints of a koala are so indistinguishable from humans that they have on occasion been confused at a crime scene.',
  'A snail can sleep for three years.',
  'The heart of a shrimp is located in its head.',
  'Elephants are the only animal that can\'t jump.',
  'A rhinoceros horn is made of hair.',
  'It is possible to hypnotize a frog by placing it on its back and gently stroking its stomach.',
  'It takes a sloth two weeks to digest its food.',
  'Nearly three percent of the ice in Antarctic glaciers is penguin urine.',
  'A cow gives nearly 200,000 glasses of milk in a lifetime.',
  'Bats always turn left when leaving a cave.',
  'Giraffes have no vocal chords.',
  'An ostrich eye is bigger than its brain.',
  'Kangaroos can\'t fart.'
]

######################################ANIMALS DATA SET #########################################################
anim=[["indian rhinoceros","The Indian rhinoceros (Rhinoceros unicornis), also called the greater one-horned rhinoceros and great Indian rhinoceros, is a rhinoceros native to the Indian subcontinent. It is listed as Vulnerable on the IUCN Red List, as populations are fragmented and restricted to less than 20,000 km2 (7,700 sq mi). Moreover, the extent and quality of the rhino's most important habitat, alluvial grassland and riverine forest, is considered to be in decline due to human and livestock encroachment."],
["Indian Wild Ass","The Indian wild ass also called the Ghudkhur, Khur or Indian onager in the local Gujarati language, is a subspecies of the onager native to Southern Asia. As of 2016, it is listed as Endangered by IUCN."],
["Gaur","The gaur, also called the Indian bison, is the largest extant bovine. This species is native to the Indian subcontinent and Southeast Asia. It has been listed as Vulnerable on the IUCN Red List since 1986. Population decline in parts of its range is likely to be more than 70% during last three generations."],
["Yak",	"The domestic yak is a long-haired domesticated bovid found throughout the Himalayan region of the Indian subcontinent, the Tibetan Plateau and as far north as Mongolia and Russia. It is descended from the wild yak."],
["sambar deer",	"The sambar is a large deer native to the Indian subcontinent, southern China, and Southeast Asia that is listed as Vulnerable on the IUCN Red List since 2008. Populations have declined substantially due to severe hunting, insurgency, and industrial exploitation of habitat."],
["chital","The cheetal (Axis axis), also known as spotted deer or axis deer, is a species of deer that is native in the Indian subcontinent. The species was first described by German naturalist Johann Christian Polycarp Erxleben in 1777. A moderate-sized deer, male chital reach nearly 90 cm (35 in) and females 70 cm (28 in) at the shoulder. While males weigh 30–75 kg (66–165 lb), the lighter females weigh 25–45 kg (55–99 lb). The species is sexually dimorphic; males are larger than females, and antlers are present only on males. The upper parts are golden to rufous, completely covered in white spots. The abdomen, rump, throat, insides of legs, ears, and tail are all white. The antlers, three-pronged, are nearly 1 m (3.3 ft) long."],
["nilgai","The nilgai or blue bull is the largest Asian antelope and is endemic to the Indian subcontinent. The sole member of the genus Boselaphus, the species was described and given its binomial name by German zoologist Peter Simon Pallas in 1766."],
["chinkara","The chinkara, also known as the Indian gazelle, is a gazelle species native to Iran, Afghanistan, Pakistan and India."],
["royal bengal tiger","They live in arid plains and hills, deserts, dry scrub and light forests. They inhabit more than 80 protected areas in India. In Pakistan, they range up to elevations of 1,500 m (4,900 ft). In Iran, they inhabit the Kavir National Park. In 2001, the Indian chinkara population was estimated at 100,000 with 80,000 living in the Thar Desert. The population in Pakistan is scattered, and has been severely reduced by hunting. Also in Iran, the population is fragmented. In Afghanistan, chinkaras are probably very rare"],
["asiatic lions","The Asiatic lion is a Panthera leo leo population in India. Its range is restricted to the Gir Forest National Park and environs in the Indian state of Gujarat. On the IUCN Red List it is listed under its former scientific name Panthera leo persica as Endangered because of its small size and area of occupancy."],
["indian leopard","The Indian leopard is a leopard subspecies widely distributed on the Indian subcontinent. The species Panthera pardus is listed as Vulnerable on the IUCN Red List because populations have declined following habitat loss and fragmentation, poaching for the illegal trade of skins and body parts, and persecution due to conflict situations"],
["snow leopard","The snow leopard or ounce is a large cat native to the mountain ranges of Central and South Asia. It is listed as Vulnerable on the IUCN Red List of Threatened Species because the global population is estimated to number less than 10,000 mature individuals and decline about 10% in the next 23 years. As of 2016, the global population was estimated at 4,678 to 8,745 mature individuals."],
["striped hyena","The striped hyena is a species of hyena native to North and East Africa, the Middle East, the Caucasus, Central Asia and the Indian subcontinent. It is listed by the IUCN as near-threatened, as the global population is estimated to be under 10,000 mature individuals which continues to experience deliberate and incidental persecution along with a decrease in its prey base such that it may come close to meeting a continuing decline of 10% over the next three generations."],
["indian wolf",	"The Indian wolf is a subspecies of grey wolf that ranges from Southwest Asia to the Indian Subcontinent. It is intermediate in size between the Tibetan and Arabian wolf, and lacks the former's luxuriant winter coat due to it living in warmer conditions. Two closely related haplotypes within this subspecies have been found basal to all other extant Canis lupus haplotypes apart from the older-lineage Himalayan wolf, and have been proposed as a separate species."],
["golden jackal","The golden jackal is a wolf-like canid that is native to Southeast Europe, Southwest Asia, South Asia, and regions of Southeast Asia. Compared with the Arabian wolf, which is the smallest of the gray wolves, the jackal is smaller and possesses shorter legs, a shorter tail, a more elongated torso, a less-prominent forehead, and a narrower and more pointed muzzle. The golden jackal's coat can vary in color from a pale creamy yellow in summer to a dark tawny beige in winter. It is listed as Least Concern on the IUCN Red List due to its widespread distribution and high density in areas with plenty of available food and optimum shelter."],
["indian wild dog",	"The Ussuri dhole, also known as the Indian wild dog, Eastern Asiatic dhole or Chinese dholeis a subspecies of dhole native to East Asia. It is widespread in the Indian subcontinent and the Indochinese Peninsula. The Ussuri dhole is also native to China, however it is probably extinct in most of its ranges in China, as well as in Mongolia and the Russian Far East."],
["bengal fox","The Bengal fox, also known as the Indian fox, is a fox endemic to the Indian subcontinent and is found from the Himalayan foothills and Terai of Nepal through southern India and from southern and eastern Pakistan to eastern India and southeastern Bangladesh."],
["sloth bear","The sloth bear is an insectivorous bear species native to the Indian subcontinent. It is listed as Vulnerable on the IUCN Red List, mainly because of habitat loss and degradation. It has also been called labiated bear because of its long lower lip and palate used for sucking insects. Compared to brown and black bears, the sloth bear is lankier, has a long, shaggy fur and a mane around the face, and long, sickle-shaped claws. It evolved from the ancestral brown bear during the Pleistocene and through convergent evolution shares features found in insect-eating mammals."],
["asian black bear","The Asian black bear, also known as the moon bear and the white-chested bear, is a medium-sized bear species native to Asia and largely adapted to arboreal life. It lives in the Himalayas, in the northern parts of the Indian subcontinent, Korea, northeastern China, the Russian Far East, the Honshū and Shikoku islands of Japan, and Taiwan. It is classified as vulnerable by the International Union for Conservation of Nature (IUCN), mostly because of deforestation and hunting for its body parts."],
["red panda","The red panda, also called the lesser panda, the red bear-cat, and the red cat-bear is a mammal native to the eastern Himalayas and southwestern China. It has reddish-brown fur, a long, shaggy tail, and a waddling gait due to its shorter front legs; it is roughly the size of a domestic cat, though with a longer body and somewhat heavier. It is arboreal, feeds mainly on bamboo, but also eats eggs, birds, and insects. It is a solitary animal, mainly active from dusk to dawn, and is largely sedentary during the day."],
["rhesus macaque","The rhesus macaque is one of the best-known species of Old World monkeys. It is listed as Least Concern in the IUCN Red List of Threatened Species in view of its wide distribution, presumed large population, and its tolerance of a broad range of habitats. Native to South, Central, and Southeast Asia, rhesus macaque have the widest geographic ranges of any nonhuman primate, occupying a great diversity of altitudes and a great variety of habitats, from grasslands to arid and forested areas, but also close to human settlements."],
["hanuman langur","Gray langurs or Hanuman langurs, the most widespread langurs of the Indian Subcontinent, are a group of Old World monkeys constituting the entirety of the genus Semnopithecus. All taxa have traditionally been placed in the single species Semnopithecus entellus. In 2001, it was recommended that several distinctive former subspecies should be given species status, so that seven species are recognized. A taxonomic classification with fewer species has also been proposed. Genetic evidence suggests that the Nilgiri langur and purple-faced langur, which usually are placed in the genus Trachypithecus, actually belong in Semnopithecus."],
["gees golden langur","Gee's golden langur, or simply the golden langur, is an Old World monkey found in a small region of western Assam, India and in the neighboring foothills of the Black Mountains of Bhutan. It is one of the most endangered primate species of India. Long considered sacred by many Himalayan people, the golden langur was first brought to the attention of the western world by the naturalist E. P. Gee in the 1950s. In a part of Bhutan, it has hybridised with the capped langur T. pileatus."],
["gray langur","Gray langurs or Hanuman langurs, the most widespread langurs of the Indian Subcontinent, are a group of Old World monkeys constituting the entirety of the genus Semnopithecus. All taxa have traditionally been placed in the single species Semnopithecus entellus. In 2001, it was recommended that several distinctive former subspecies should be given species status, so that seven species are recognized. A taxonomic classification with fewer species has also been proposed. Genetic evidence suggests that the Nilgiri langur and purple-faced langur, which usually are placed in the genus Trachypithecus, actually belong in Semnopithecus."],
["lion taled macaque","The lion-tailed macaque, or the wanderoo, is an Old World monkey endemic to the Western Ghats of South India."],
["indian crested porcupine","The Indian crested porcupine, or Indian porcupine, is a large species of hystricomorph rodent belonging to the Old World porcupine family, Hystricidae. It is native to southern Asia and the Middle East."]]
